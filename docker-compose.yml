# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
#       Stop all: docker-compose down
#
version: '3.7'

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-info}
  MONGO_DB_PRODUCTION_URL: '${MONGO_DB_PRODUCTION_URL}'
  JWT_SECRET_PRODUCTION: '${JWT_SECRET_PRODUCTION}'

services:
  app:
    image: alifspb/quick_process_swift:latest
    container_name: quick_process_swift
    build:
      context: .
    environment:
      <<: *shared_environment
    ports:
      - '8014:8014'
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8014"]
    networks:
      - quick_visa_process_networks
    volumes:
      - .env.production:/app/.env.production

  mongo:
    image: mongo
    container_name: qvp_mongo_pro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - qvp_mongodb_pro:/data/db
    networks:
      - quick_visa_process_networks
    restart: unless-stopped
    ports:
      - '27018:27017'

networks:
  qvp_networks:
    name: qvp_networks

volumes:
  qvp_mongodb_pro:
